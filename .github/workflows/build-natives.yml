name: Build & Release Native Libraries

on:
  push:
    tags:
      - 'v*'

jobs:
  build-natives:
    name: Build for ${{ matrix.arch }} on ${{ matrix.os-name }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            os-name: Linux
            arch: x86_64
            artifact_name: inertia-linux-x64
            lib_name: libinertia_native.so

          - os: ubuntu-latest
            os-name: Linux
            arch: aarch64
            artifact_name: inertia-linux-aarch64
            lib_name: libinertia_native.so

          - os: windows-latest
            os-name: Windows
            arch: x86_64
            artifact_name: inertia-windows-x64
            lib_name: inertia_native.dll

          - os: macos-latest
            os-name: macOS
            arch: aarch64
            artifact_name: inertia-macos-arm64
            lib_name: libinertia_native.dylib

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      # --- КРОК 1: НАЛАШТУВАННЯ QEMU ДЛЯ ЕМУЛЯЦІЇ ARM ---
      - name: Set up QEMU
        if: matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v3

      # --- КРОК 2: ЗАПУСК КОМАНД У DOCKER-КОНТЕЙНЕРІ ДЛЯ AARCH64 ---
      - name: Build in aarch64 container
        if: matrix.arch == 'aarch64'
        uses: docker://arm64v8/ubuntu:22.04
        with:
          args: >
            bash -c "
              apt-get update && apt-get install -y git cmake g++ openjdk-21-jdk
              && export JAVA_HOME=/usr/lib/jvm/java-21-openjdk-arm64
              && cd /github/workspace/native
              && cmake -B build . -DCMAKE_BUILD_TYPE=Release
              && cmake --build build --config Release
            "

      # --- КРОК 3: ЗВИЧАЙНА ЗБІРКА ДЛЯ X86_64 (НЕ В DOCKER) ---
      - name: Build for x86_64
        if: matrix.arch == 'x86_64'
        shell: bash
        run: |
          # Встановлюємо JDK, щоб CMake знайшов JNI
          export JAVA_HOME=$JAVA_HOME_21_X64
          
          # Створюємо папку для збірки
          cmake -E make_directory ${{ github.workspace }}/native/build
          
          # Конфігуруємо та збираємо
          cd ${{ github.workspace }}/native/build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release

      # --- КРОК 4: АРХІВАЦІЯ РЕЗУЛЬТАТУ ---
      - name: Archive native library
        shell: bash
        run: |
          cd ${{ github.workspace }}/native/build/
          mkdir -p artifact
          mv ${{ matrix.lib_name }} artifact/
          cd artifact
          zip ../../${{ matrix.artifact_name }}.zip ./*

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ github.workspace }}/native/${{ matrix.artifact_name }}.zip

  release:
    name: Create GitHub Release
    needs: build-natives
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*/*.zip